worker_processes auto;

events {
	worker_connections 1024;
}

http {

	upstream node {
		least_conn;
		server node1:3000 weight=10 max_fails=3 fail_timeout=30s;
	}

	server {
		listen 80 default_server;
		listen [::]:80 default_server;
		server_name server.com;
		return 301 https://$server_name$request_uri;
	}

	server {

		listen 0.0.0.0:443 ssl;
		server_name server.com;
		root /app/apps/gestion/pub;
	    index index.html;

		#ssl on;
		#ssl_certificate     /cert/server.com.crt.chain;
		#ssl_certificate_key /cert/server.com.key;

		location / {
        	try_files $uri $uri/ /index.html =404;
    	}
	}

	server {

		listen 0.0.0.0:80;
		listen 0.0.0.0:443 ssl;
		server_name server.com;

		#ssl on;
		#ssl_certificate     /cert/server.com.crt.chain;
		#ssl_certificate_key /cert/server.com.key;

		location / {
			proxy_pass http://node;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_cache_bypass $http_upgrade;
		}
	}

	server {

		listen 0.0.0.0:80;
		listen 0.0.0.0:443 ssl;
		server_name server.com;

		# ssl on;
		# ssl_certificate     /cert/server.com.crt.chain;
		# ssl_certificate_key /cert/server.com.key;

		location / {
			proxy_pass http://node;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_cache_bypass $http_upgrade;
		}
	}
}